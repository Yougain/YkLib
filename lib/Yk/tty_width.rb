#!/usr/bin/env ruby


module TTYWidth
	module_function
	def width str, tabstop, pos
		return -1 if pos == -1
		w = pos
		str.each_codepoint do |cp|
			case cp
			when 0x20 ... 0x7f
				w += 1
			when 0x3190 ... 0x4dc0
				w += 2
			when 0x09 #tab
				if tabstop
					w = (w.div(tabstop) + 1) * tabstop
				else
					raise ArgumentError.new("tabstop is not specified, cannot use '\t' for width calculation")
				end
			else
				i = Data.bsearch_index do |item|
					item[0] > cp 
				end
				if i
					tmp = Data[i - 1][1]
					if tmp == -1
						if cp > 0x20
							raise ArgumentError.new("cannot use '#{cp.chr(Encoding::UTF_8)}' for width calculation")
						elsif cp == "\n"
							raise ArgumentError.new("cannot use '\\n' for width calculation")
						elsif cp == "\r"
							raise ArgumentError.new("cannot use '\\r' for width calculation")
						else
							raise ArgumentError.new("cannot use control code, 0x#{cp.to_s(16)} for width calculation")
						end
					else
						w += tmp
					end
				else
					w += 1
				end
			end
		end
		w
	end
	Data = [
		[0x0000, -1], [0x0020,  1], [0x007f, -1], [0x009b, -1], [0x009c, -1],
		[0x00a0,  1], [0x00a7, -1], [0x00a9,  1], [0x00b0, -1], [0x00b2,  1],
		[0x00b4, -1], [0x00b5,  1], [0x00b6, -1], [0x00b7,  1], [0x00d7, -1],
		[0x00d8,  1], [0x00f7, -1], [0x00f8,  1], [0x01ce, -1], [0x01cf,  1],
		[0x01d0, -1], [0x01d1,  1], [0x01d2, -1], [0x01d3,  1], [0x01d4, -1],
		[0x01d5,  1], [0x01d6, -1], [0x01d7,  1], [0x01d8, -1], [0x01d9,  1],
		[0x01da, -1], [0x01db,  1], [0x01dc, -1], [0x01dd,  1], [0x02ca, -1],
		[0x02cc,  1], [0x0300, -1], [0x0370,  1], [0x0391, -1], [0x03a2,  1],
		[0x03a3, -1], [0x03aa,  1], [0x03b1, -1], [0x03c2,  1], [0x03c3, -1],
		[0x03ca,  1], [0x0401, -1], [0x0402,  1], [0x0410, -1], [0x0450,  1],
		[0x0451, -1], [0x0452,  1], [0x0483, -1], [0x0487,  1], [0x0488, -1],
		[0x048a,  1], [0x0591, -1], [0x05be,  1], [0x05bf, -1], [0x05c0,  1],
		[0x05c1, -1], [0x05c3,  1], [0x05c4, -1], [0x05c6,  1], [0x05c7, -1],
		[0x05c8,  1], [0x0600, -1], [0x0604,  1], [0x0610, -1], [0x0616,  1],
		[0x064b, -1], [0x065f,  1], [0x0670, -1], [0x0671,  1], [0x06d6, -1],
		[0x06e5,  1], [0x06e7, -1], [0x06e9,  1], [0x06ea, -1], [0x06ee,  1],
		[0x070f, -1], [0x0710,  1], [0x0711, -1], [0x0712,  1], [0x0730, -1],
		[0x074b,  1], [0x07a6, -1], [0x07b1,  1], [0x07eb, -1], [0x07f4,  1],
		[0x0901, -1], [0x0903,  1], [0x093c, -1], [0x093d,  1], [0x0941, -1],
		[0x0949,  1], [0x094d, -1], [0x094e,  1], [0x0951, -1], [0x0955,  1],
		[0x0962, -1], [0x0964,  1], [0x0981, -1], [0x0982,  1], [0x09bc, -1],
		[0x09bd,  1], [0x09c1, -1], [0x09c5,  1], [0x09cd, -1], [0x09ce,  1],
		[0x09e2, -1], [0x09e4,  1], [0x0a01, -1], [0x0a03,  1], [0x0a3c, -1],
		[0x0a3d,  1], [0x0a41, -1], [0x0a43,  1], [0x0a47, -1], [0x0a49,  1],
		[0x0a4b, -1], [0x0a4e,  1], [0x0a70, -1], [0x0a72,  1], [0x0a81, -1],
		[0x0a83,  1], [0x0abc, -1], [0x0abd,  1], [0x0ac1, -1], [0x0ac6,  1],
		[0x0ac7, -1], [0x0ac9,  1], [0x0acd, -1], [0x0ace,  1], [0x0ae2, -1],
		[0x0ae4,  1], [0x0b01, -1], [0x0b02,  1], [0x0b3c, -1], [0x0b3d,  1],
		[0x0b3f, -1], [0x0b40,  1], [0x0b41, -1], [0x0b44,  1], [0x0b4d, -1],
		[0x0b4e,  1], [0x0b56, -1], [0x0b57,  1], [0x0b82, -1], [0x0b83,  1],
		[0x0bc0, -1], [0x0bc1,  1], [0x0bcd, -1], [0x0bce,  1], [0x0c3e, -1],
		[0x0c41,  1], [0x0c46, -1], [0x0c49,  1], [0x0c4a, -1], [0x0c4e,  1],
		[0x0c55, -1], [0x0c57,  1], [0x0cbc, -1], [0x0cbd,  1], [0x0cbf, -1],
		[0x0cc0,  1], [0x0cc6, -1], [0x0cc7,  1], [0x0ccc, -1], [0x0cce,  1],
		[0x0ce2, -1], [0x0ce4,  1], [0x0d41, -1], [0x0d44,  1], [0x0d4d, -1],
		[0x0d4e,  1], [0x0dca, -1], [0x0dcb,  1], [0x0dd2, -1], [0x0dd5,  1],
		[0x0dd6, -1], [0x0dd7,  1], [0x0e31, -1], [0x0e32,  1], [0x0e34, -1],
		[0x0e3b,  1], [0x0e47, -1], [0x0e4f,  1], [0x0eb1, -1], [0x0eb2,  1],
		[0x0eb4, -1], [0x0eba,  1], [0x0ebb, -1], [0x0ebd,  1], [0x0ec8, -1],
		[0x0ece,  1], [0x0f18, -1], [0x0f1a,  1], [0x0f35, -1], [0x0f36,  1],
		[0x0f37, -1], [0x0f38,  1], [0x0f39, -1], [0x0f3a,  1], [0x0f71, -1],
		[0x0f7f,  1], [0x0f80, -1], [0x0f85,  1], [0x0f86, -1], [0x0f88,  1],
		[0x0f90, -1], [0x0f98,  1], [0x0f99, -1], [0x0fbd,  1], [0x0fc6, -1],
		[0x0fc7,  1], [0x102d, -1], [0x1031,  1], [0x1032, -1], [0x1033,  1],
		[0x1036, -1], [0x1038,  1], [0x1039, -1], [0x103a,  1], [0x1058, -1],
		[0x105a,  1], [0x1100,  2], [0x1160, -1], [0x1200,  1], [0x135f, -1],
		[0x1360,  1], [0x1712, -1], [0x1715,  1], [0x1732, -1], [0x1735,  1],
		[0x1752, -1], [0x1754,  1], [0x1772, -1], [0x1774,  1], [0x17b4, -1],
		[0x17b6,  1], [0x17b7, -1], [0x17be,  1], [0x17c6, -1], [0x17c7,  1],
		[0x17c9, -1], [0x17d4,  1], [0x17dd, -1], [0x17de,  1], [0x180b, -1],
		[0x180e,  1], [0x18a9, -1], [0x18aa,  1], [0x1920, -1], [0x1923,  1],
		[0x1927, -1], [0x1929,  1], [0x1932, -1], [0x1933,  1], [0x1939, -1],
		[0x193c,  1], [0x1a17, -1], [0x1a19,  1], [0x1b00, -1], [0x1b04,  1],
		[0x1b34, -1], [0x1b35,  1], [0x1b36, -1], [0x1b3b,  1], [0x1b3c, -1],
		[0x1b3d,  1], [0x1b42, -1], [0x1b43,  1], [0x1b6b, -1], [0x1b74,  1],
		[0x1dc0, -1], [0x1dcb,  1], [0x1dfe, -1], [0x1e00,  1], [0x200b, -1],
		[0x2011,  1], [0x2015, -1], [0x2017,  1], [0x2018, -1], [0x201a,  1],
		[0x201c, -1], [0x201e,  1], [0x2020, -1], [0x2022,  1], [0x2025, -1],
		[0x2027,  1], [0x202a, -1], [0x202f,  1], [0x2030, -1], [0x2031,  1],
		[0x2032, -1], [0x2034,  1], [0x203b, -1], [0x203c,  1], [0x2060, -1],
		[0x2064,  1], [0x206a, -1], [0x2070,  1], [0x20d0, -1], [0x20f0,  1],
		[0x2103, -1], [0x2104,  1], [0x2116, -1], [0x2117,  1], [0x2121, -1],
		[0x2122,  1], [0x212b, -1], [0x212c,  1], [0x2160, -1], [0x216c,  1],
		[0x2170, -1], [0x217a,  1], [0x2189, -1], [0x218a,  1], [0x2190, -1],
		[0x2194,  1], [0x21d2, -1], [0x21d3,  1], [0x21d4, -1], [0x21d5,  1],
		[0x2200, -1], [0x2201,  1], [0x2202, -1], [0x2204,  1], [0x2207, -1],
		[0x2209,  1], [0x220b, -1], [0x220c,  1], [0x2211, -1], [0x2212,  1],
		[0x221a, -1], [0x221b,  1], [0x221d, -1], [0x2221,  1], [0x2225, -1],
		[0x2226,  1], [0x2227, -1], [0x222d,  1], [0x222e, -1], [0x222f,  1],
		[0x2234, -1], [0x2236,  1], [0x223d, -1], [0x223e,  1], [0x2252, -1],
		[0x2253,  1], [0x2260, -1], [0x2262,  1], [0x2266, -1], [0x2268,  1],
		[0x226a, -1], [0x226c,  1], [0x2282, -1], [0x2284,  1], [0x2286, -1],
		[0x2288,  1], [0x22a5, -1], [0x22a6,  1], [0x22bf, -1], [0x22c0,  1],
		[0x2312, -1], [0x2313,  1], [0x231a, -1], [0x231b,  1], [0x2328, -1],
		[0x2329,  2], [0x232b,  1], [0x23e9, -1], [0x23eb,  1], [0x23ed, -1],
		[0x23ef,  1], [0x23f0, -1], [0x23f3,  1], [0x23f8, -1], [0x23fb,  1],
		[0x2460, -1], [0x24ea,  1], [0x24eb, -1], [0x2500,  1], [0x25a0, -1],
		[0x25a2,  1], [0x25b2, -1], [0x25b4,  1], [0x25bc, -1], [0x25be,  1],
		[0x25c6, -1], [0x25c8,  1], [0x25cb, -1], [0x25cc,  1], [0x25ce, -1],
		[0x25d0,  1], [0x25ef, -1], [0x25f0,  1], [0x25fb, -1], [0x25ff,  1],
		[0x2600, -1], [0x2607,  1], [0x2609, -1], [0x260a,  1], [0x260e, -1],
		[0x2610,  1], [0x2611, -1], [0x2612,  1], [0x2614, -1], [0x2616,  1],
		[0x2618, -1], [0x2619,  1], [0x261c, -1], [0x261f,  1], [0x2620, -1],
		[0x2621,  1], [0x2622, -1], [0x2624,  1], [0x2626, -1], [0x2627,  1],
		[0x262a, -1], [0x262b,  1], [0x262e, -1], [0x2630,  1], [0x2638, -1],
		[0x2639,  1], [0x2640, -1], [0x2641,  1], [0x2642, -1], [0x2643,  1],
		[0x2648, -1], [0x2654,  1], [0x265f, -1], [0x2660,  1], [0x2668, -1],
		[0x2669,  1], [0x266a, -1], [0x266b,  1], [0x266d, -1], [0x266e,  1],
		[0x266f, -1], [0x2670,  1], [0x267b, -1], [0x267c,  1], [0x267e, -1],
		[0x267f,  1], [0x2692, -1], [0x2693,  1], [0x2694, -1], [0x2695,  1],
		[0x2696, -1], [0x2698,  1], [0x2699, -1], [0x269a,  1], [0x269b, -1],
		[0x269d,  1], [0x269e, -1], [0x26a1,  1], [0x26aa, -1], [0x26ac,  1],
		[0x26b0, -1], [0x26b1,  1], [0x26bd, -1], [0x26c0,  1], [0x26c4, -1],
		[0x26e2,  1], [0x26e3, -1], [0x26e4,  1], [0x26e8, -1], [0x2700,  1],
		[0x2702, -1], [0x2703,  1], [0x2705, -1], [0x2706,  1], [0x2708, -1],
		[0x270e,  1], [0x270f, -1], [0x2710,  1], [0x2712, -1], [0x2713,  1],
		[0x2714, -1], [0x2715,  1], [0x2716, -1], [0x2717,  1], [0x271d, -1],
		[0x271e,  1], [0x2721, -1], [0x2722,  1], [0x2728, -1], [0x2729,  1],
		[0x2733, -1], [0x2735,  1], [0x273d, -1], [0x273e,  1], [0x2744, -1],
		[0x2745,  1], [0x2747, -1], [0x2748,  1], [0x274c, -1], [0x274d,  1],
		[0x274e, -1], [0x274f,  1], [0x2753, -1], [0x2755,  1], [0x2763, -1],
		[0x2765,  1], [0x2776, -1], [0x2780,  1], [0x2795, -1], [0x2798,  1],
		[0x27a1, -1], [0x27a2,  1], [0x27b0, -1], [0x27b1,  1], [0x27bf, -1],
		[0x27c0,  1], [0x2b05, -1], [0x2b08,  1], [0x2b1b, -1], [0x2b1d,  1],
		[0x2b50, -1], [0x2b51,  1], [0x2b55, -1], [0x2b5a,  1], [0x2e80,  2],
		[0x302a, -1], [0x3030,  2], [0x303f,  1], [0x3040, -1], [0x3041,  2],
		[0x3097, -1], [0x309b,  2], [0x3100, -1], [0x3105,  2], [0x312f, -1],
		[0x3131,  2], [0x318f, -1], [0x3190,  2], [0x4dc0, -1], [0x4e00,  2],
		[0xa4c7, -1], [0xa4d0,  1], [0xa806, -1], [0xa807,  1], [0xa80b, -1],
		[0xa80c,  1], [0xa825, -1], [0xa827,  1], [0xa960, -1], [0xa97d,  1],
		[0xac00,  2], [0xd7a4,  1], [0xd800, -1], [0xf900,  2], [0xfb00,  1],
		[0xfb1e, -1], [0xfb1f,  1], [0xfe00, -1], [0xfe24,  1], [0xfe30,  2],
		[0xfe6c, -1], [0xfe70,  1], [0xfeff, -1], [0xff01,  2], [0xff61,  1],
		[0xffe0,  2], [0xffe7,  1], [0xfff9, -1], [0xfffc,  1]
	]
end

if File.expand_path(__FILE__) == File.expand_path($0)
	1.upto 0xffff do |i|
		w = nil
		c = nil
		begin
			c = i.chr(Encoding::UTF_8)
			w = TTYWidth.width(c, 4, 0)
		rescue ArgumentError
		rescue RangeError
		else
			if w != -1
				print "0x#{i.to_s(16)}:'#{c*50}' #{w}\n"
			end
		end
	end
end
